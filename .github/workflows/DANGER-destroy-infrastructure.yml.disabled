name: "üö® DANGER - Destroy Infrastructure üö®"

# This workflow is ENABLED for infrastructure cleanup
# To disable: change "workflow_dispatch" to "workflow_dispatch_DISABLED"
on:
  workflow_dispatch_DISABLED:
    inputs:
      confirmation:
        description: 'Type exactly: "DESTROY-PRODUCTION-INFRASTRUCTURE-PERMANENTLY"'
        required: true
        type: string
      environment:
        description: 'Type exactly: "production"'
        required: true
        type: string
      reason:
        description: "Reason for destruction (required for audit)"
        required: true
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    # Triple confirmation required
    if: |
      github.event.inputs.confirmation == 'DESTROY-PRODUCTION-INFRASTRUCTURE-PERMANENTLY' &&
      github.event.inputs.environment == 'production' &&
      github.event.inputs.reason != ''

    # Requires manual approval via protected environment
    environment:
      name: production-destroy
      url: https://github.com/${{ github.repository }}/actions

    defaults:
      run:
        working-directory: infra/terraform/hetzner

    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
        with: { determinate: true }

      - uses: DeterminateSystems/flakehub-cache-action@main

      - name: Setup Terraform Environment
        uses: ./.github/actions/setup-terraform-env
        with:
          op-service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Final confirmation warning
        run: |
          echo "üö®üö®üö® FINAL WARNING üö®üö®üö®"
          echo "You are about to PERMANENTLY DESTROY:"
          echo "- Hetzner server (boltfoundry-com)"
          echo "- Floating IP and all network config"
          echo "- Database volume (DATA LOSS!)"
          echo "- All infrastructure for next.boltfoundry.com"
          echo ""
          echo "Reason: ${{ github.event.inputs.reason }}"
          echo ""
          echo "Waiting 30 seconds for final consideration..."
          sleep 30
          echo "Proceeding with destruction..."

      - name: Terraform destroy
        run: |
          terraform init -backend-config="endpoint=${{ env.TERRAFORM_S3_ENDPOINT }}"
          terraform destroy -auto-approve \
            -var="github_username=${{ github.repository_owner }}" \
            -var="domain_name=next.boltfoundry.com"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Destruction complete
        run: |
          echo "üí• Infrastructure destroyed successfully"
          echo "‚ö†Ô∏è  Remember to:"
          echo "   1. Verify in Hetzner Console that resources are gone"
          echo "   2. Check Cloudflare DNS records"
          echo "   3. Clear any local Terraform state if needed"
          echo "   4. Re-run deployment workflow when ready to recreate"
