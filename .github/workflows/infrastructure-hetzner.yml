name: Deploy Infrastructure (Hetzner)

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ["infra/terraform/hetzner/**"]

# Prevent concurrent Terraform operations
concurrency:
  group: terraform-state
  cancel-in-progress: false

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: infrastructure

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: DeterminateSystems/nix-installer-action@main
        with: { determinate: true }

      # - uses: DeterminateSystems/flakehub-cache-action@main  # Disabled FlakeHub caching

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Run Terraform Operations
        run: |
          nix develop --accept-flake-config --command bash -euc "
            # Sync all variables from 1Password
            export OP_SERVICE_ACCOUNT_TOKEN='${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}'
            bft sitevar sync --force

            # Source both config and secrets
            source .env.config
            source .env.secrets

            # Map to Terraform variable names (required for TF to recognize them)
            export TF_VAR_hcloud_token=\$HETZNER_API_TOKEN
            export TF_VAR_cloudflare_api_token=\$CLOUDFLARE_API_TOKEN
            export TF_VAR_cloudflare_zone_id=\$CLOUDFLARE_ZONE_ID
            export TF_VAR_cloudflare_zone_id_promptgrade=\$CLOUDFLARE_ZONE_ID_PROMPTGRADE
            export TF_VAR_cloudflare_zone_id_bltcdn=\$CLOUDFLARE_ZONE_ID_BLTCDN
            export TF_VAR_cloudflare_account_id=\$CLOUDFLARE_ACCOUNT_ID
            export TF_VAR_r2_access_key=\$AWS_ACCESS_KEY_ID
            export TF_VAR_r2_secret_key=\$AWS_SECRET_ACCESS_KEY
            export TF_VAR_ssh_public_key=\$SSH_PUBLIC_KEY
            export TF_VAR_hyperdx_api_key=\$HYPERDX_API_KEY
            export TF_VAR_hetzner_project_id=\$HETZNER_PROJECT_ID

            # Override AWS creds for backend (uses CI project, not production)
            export AWS_ACCESS_KEY_ID=\$TERRAFORM_BACKEND_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=\$TERRAFORM_BACKEND_SECRET_ACCESS_KEY

            # Run Terraform
            cd infra/terraform/hetzner
            terraform init -backend-config=\"endpoint=\${TERRAFORM_BACKEND_ENDPOINT:-\$S3_ENDPOINT}\"
            terraform plan

            if [ '${{ github.ref }}' == 'refs/heads/main' ]; then
              terraform apply -auto-approve
            fi
          "
