name: Debug Terraform Setup

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    environment: infrastructure
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check environment and secrets
        run: |
          echo "=== Environment Info ==="
          echo "GitHub Environment: infrastructure"
          echo "Runner: $(uname -a)"
          echo "PWD: $(pwd)"
          echo ""
          
          echo "=== Checking Secret Availability ==="
          if [ -z "${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}" ]; then
            echo "❌ OP_SERVICE_ACCOUNT_TOKEN is NOT set or empty"
          else
            echo "✅ OP_SERVICE_ACCOUNT_TOKEN is set (length: ${#OP_SERVICE_ACCOUNT_TOKEN_PLACEHOLDER})"
          fi
          
          echo ""
          echo "=== Repository Structure ==="
          ls -la
          ls -la .github/actions/ || echo "No .github/actions directory"
          ls -la .github/actions/setup-terraform-env/ || echo "No setup-terraform-env action"
        env:
          OP_SERVICE_ACCOUNT_TOKEN_PLACEHOLDER: "${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}"
      
      - uses: DeterminateSystems/nix-installer-action@main
        with: { determinate: true }
      
      - name: Test Nix environment
        run: |
          echo "=== Testing Nix Installation ==="
          which nix || echo "❌ nix not found in PATH"
          nix --version || echo "❌ Cannot get nix version"
          
          echo ""
          echo "=== Testing nix develop ==="
          nix develop --accept-flake-config --command echo "✅ Nix develop works"
      
      - name: Test bft command
        run: |
          echo "=== Testing bft command ==="
          nix develop --accept-flake-config --command bash -c "
            which bft || echo '❌ bft not found'
            bft --version || echo '❌ Cannot get bft version'
            echo ''
            echo '=== Available bft commands ==='
            bft help || echo '❌ bft help failed'
          "
      
      - name: Test 1Password connection
        run: |
          echo "=== Testing 1Password Service Account ==="
          nix develop --accept-flake-config --command bash -c "
            export OP_SERVICE_ACCOUNT_TOKEN='${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}'
            
            # Test if we can list vaults (basic connectivity test)
            echo 'Testing 1Password connectivity...'
            if command -v op &> /dev/null; then
              op vault list --format=json 2>&1 | head -5 || echo '❌ Failed to list vaults'
            else
              echo '❌ op CLI not found'
            fi
            
            echo ''
            echo '=== Testing bft sitevar ==='
            bft sitevar list 2>&1 | head -10 || echo '❌ bft sitevar list failed'
            
            echo ''
            echo '=== Testing bft sitevar sync (dry run) ==='
            bft sitevar sync --dry-run 2>&1 | head -20 || echo '❌ bft sitevar sync dry run failed'
          "
      
      - name: Manual Setup Terraform Environment (Debug)
        run: |
          echo "=== Attempting manual setup ==="
          nix develop --accept-flake-config --command bash -euc "
            export OP_SERVICE_ACCOUNT_TOKEN='${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}'
            
            echo 'Running bft sitevar sync...'
            if bft sitevar sync --force; then
              echo '✅ bft sitevar sync succeeded'
              
              echo ''
              echo '=== Checking generated files ==='
              ls -la .env* || echo 'No .env files found'
              
              if [ -f .env.secrets ]; then
                echo ''
                echo '=== Checking required variables (names only) ==='
                grep -E '^(HETZNER_API_TOKEN|TERRAFORM_BACKEND_|AWS_)' .env.secrets | cut -d= -f1 | sort
              fi
            else
              echo '❌ bft sitevar sync failed with exit code: $?'
            fi
          " || true