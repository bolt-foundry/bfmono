# Generated by bft generate-kamal-config
# Template: infra/terraform/hetzner/deploy.yml.tpl
# Generated at: 2025-08-19T17:06:52.683Z
# Environment: production
# Secrets count: 7

service: boltfoundry-com
image: bolt-foundry/boltfoundry-com
servers:
  web:
    - "${floating_ip}"
ssh:
  user: root
  keys:
    - ~/.ssh/id_rsa
builder:
  arch:
    - amd64
  dockerfile: infra/Dockerfile.deploy
  context: .
  args:
    BINARY_PATH: build/boltfoundry-com
    BINARY_NAME: boltfoundry-com
proxy:
  ssl: false
  host: boltfoundry.com
  app_port: 8000
  healthcheck:
    path: /
    interval: 10
    timeout: 5
registry:
  server: ghcr.io
  username: bolt-foundry
  password:
    - GITHUB_TOKEN
env:
  clear:
    PORT: 8000
    DB_BACKEND_TYPE: sqlite
    SQLITE_DB_PATH: /data/bfdb.sqlite
    BF_ENV: production
  secret:
    - ASSET_STORAGE_BUCKET
    - CODEBOT_GITHUB_PAT
    - GOOGLE_OAUTH_CLIENT_SECRET
    - JWT_SECRET
    - OPENROUTER_API_KEY
    - S3_ACCESS_KEY
    - S3_SECRET_KEY
logging:
  driver: fluentd
  options:
    fluentd-address: "tls://in-otel.hyperdx.io:24225"
    labels: "__HDX_API_KEY,service.name"
labels:
  __HDX_API_KEY: "${HYPERDX_API_KEY}"
  service.name: boltfoundry-com
aliases:
  console: app exec --interactive --reuse "bash"
  shell: app exec --interactive --reuse "bash"
  logs: app logs --follow
accessories:
  otel_collector:
    image: "otel/opentelemetry-collector:0.100.0"
    port: 4318
    files:
      - "infra/terraform/hetzner/config/otel_collector.yml:/etc/otelcol/config.yaml"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    options:
      user: 0
    roles:
      - web
    env:
      clear:
        HDX_API_KEY: "${HYPERDX_API_KEY}"
volumes:
  - "/mnt/database:/data"
