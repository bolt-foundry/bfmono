{
  "version": 3,
  "sources": ["../../../../node_modules/.deno/loglevel-plugin-prefix@0.8.4/node_modules/loglevel-plugin-prefix/lib/loglevel-plugin-prefix.js"],
  "sourcesContent": ["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.prefix = factory(root);\n  }\n}(this, function (root) {\n  'use strict';\n\n  var merge = function (target) {\n    var i = 1;\n    var length = arguments.length;\n    var key;\n    for (; i < length; i++) {\n      for (key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          target[key] = arguments[i][key];\n        }\n      }\n    }\n    return target;\n  };\n\n  var defaults = {\n    template: '[%t] %l:',\n    levelFormatter: function (level) {\n      return level.toUpperCase();\n    },\n    nameFormatter: function (name) {\n      return name || 'root';\n    },\n    timestampFormatter: function (date) {\n      return date.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1');\n    },\n    format: undefined\n  };\n\n  var loglevel;\n  var configs = {};\n\n  var reg = function (rootLogger) {\n    if (!rootLogger || !rootLogger.getLogger) {\n      throw new TypeError('Argument is not a root logger');\n    }\n    loglevel = rootLogger;\n  };\n\n  var apply = function (logger, config) {\n    if (!logger || !logger.setLevel) {\n      throw new TypeError('Argument is not a logger');\n    }\n\n    /* eslint-disable vars-on-top */\n    var originalFactory = logger.methodFactory;\n    var name = logger.name || '';\n    var parent = configs[name] || configs[''] || defaults;\n    /* eslint-enable vars-on-top */\n\n    function methodFactory(methodName, logLevel, loggerName) {\n      var originalMethod = originalFactory(methodName, logLevel, loggerName);\n      var options = configs[loggerName] || configs[''];\n\n      var hasTimestamp = options.template.indexOf('%t') !== -1;\n      var hasLevel = options.template.indexOf('%l') !== -1;\n      var hasName = options.template.indexOf('%n') !== -1;\n\n      return function () {\n        var content = '';\n\n        var length = arguments.length;\n        var args = Array(length);\n        var key = 0;\n        for (; key < length; key++) {\n          args[key] = arguments[key];\n        }\n\n        // skip the root method for child loggers to prevent duplicate logic\n        if (name || !configs[loggerName]) {\n          /* eslint-disable vars-on-top */\n          var timestamp = options.timestampFormatter(new Date());\n          var level = options.levelFormatter(methodName);\n          var lname = options.nameFormatter(loggerName);\n          /* eslint-enable vars-on-top */\n\n          if (options.format) {\n            content += options.format(level, lname, timestamp);\n          } else {\n            content += options.template;\n            if (hasTimestamp) {\n              content = content.replace(/%t/, timestamp);\n            }\n            if (hasLevel) content = content.replace(/%l/, level);\n            if (hasName) content = content.replace(/%n/, lname);\n          }\n\n          if (args.length && typeof args[0] === 'string') {\n            // concat prefix with first argument to support string substitutions\n            args[0] = content + ' ' + args[0];\n          } else {\n            args.unshift(content);\n          }\n        }\n\n        originalMethod.apply(undefined, args);\n      };\n    }\n\n    if (!configs[name]) {\n      logger.methodFactory = methodFactory;\n    }\n\n    // for remove inherited format option if template option preset\n    config = config || {};\n    if (config.template) config.format = undefined;\n\n    configs[name] = merge({}, parent, config);\n\n    logger.setLevel(logger.getLevel());\n\n    if (!loglevel) {\n      logger.warn(\n        'It is necessary to call the function reg() of loglevel-plugin-prefix before calling apply. From the next release, it will throw an error. See more: https://github.com/kutuluk/loglevel-plugin-prefix/blob/master/README.md'\n      );\n    }\n\n    return logger;\n  };\n\n  var api = {\n    reg: reg,\n    apply: apply\n  };\n\n  var save;\n\n  if (root) {\n    save = root.prefix;\n    api.noConflict = function () {\n      if (root.prefix === api) {\n        root.prefix = save;\n      }\n      return api;\n    };\n  }\n\n  return api;\n}));\n"],
  "mappings": "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",
  "names": []
}
